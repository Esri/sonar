Index: src/jasmine-spec-reporter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/jasmine-spec-reporter.js	(date 1431280630000)
+++ src/jasmine-spec-reporter.js	(revision )
@@ -65,7 +65,7 @@
   },
 
   suiteStarted: function (suite) {
-    this.display.suite(suite);
+    this.display.suiteStarted(suite);
   },
 
   suiteDone: function (suite) {
Index: spec/default-display.spec.coffee
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- spec/default-display.spec.coffee	(date 1431280630000)
+++ spec/default-display.spec.coffee	(revision )
@@ -166,6 +166,19 @@
         ''
       ]
 
+    it 'should not display empty suite', ->
+      outputs = new Test(@reporter, ->
+        @describe 'suite 1', =>
+          @it 'spec 1', =>
+            @passed()
+        @describe 'empty suite', =>
+      ).outputs
+      expect(outputs).contains [
+        '  suite 1'
+        '    âœ“ spec 1'
+        ''
+      ]
+      expect(outputs).not.contains /empty suite/
 
   describe 'summary', ->
     it 'should report success', ->
Index: src/spec-display.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/spec-display.js	(date 1431280630000)
+++ src/spec-display.js	(revision )
@@ -2,6 +2,7 @@
   this.indent = '  ';
   this.currentIndent = '';
   this.suiteHierarchy = [];
+  this.suiteHierarchyDisplayed = [];
   this.failedSpecs = [];
   this.lastWasNewLine = false;
   this.displayFailuresSummary = options.displayFailuresSummary !== false;
@@ -69,7 +70,7 @@
 
   successful: function (spec) {
     if (this.displaySuccessfulSpec) {
-      this.ensureSuiteDisplayed();
+      this.ensureSuiteDisplayed(spec);
       var log = null;
       this.displayProcessors.forEach(function (displayProcessor) {
         log = displayProcessor.displaySuccessfulSpec(spec, log);
@@ -81,7 +82,7 @@
   failed: function (spec) {
     this.failedSpecs.push(spec);
     if (this.displayFailedSpec) {
-      this.ensureSuiteDisplayed();
+      this.ensureSuiteDisplayed(spec);
       var log = null;
       this.displayProcessors.forEach(function (displayProcessor) {
         log = displayProcessor.displayFailedSpec(spec, log);
@@ -93,7 +94,7 @@
 
   pending: function (spec) {
     if (this.displayPendingSpec) {
-      this.ensureSuiteDisplayed();
+      this.ensureSuiteDisplayed(spec);
       var log = null;
       this.displayProcessors.forEach(function (displayProcessor) {
         log = displayProcessor.displayPendingSpec(spec, log);
@@ -124,23 +125,29 @@
     return filtered.join('\n' + this.currentIndent);
   },
 
+  suiteStarted: function (suite) {
+    this.computeSuiteHierarchy(suite);
+  },
+
+  suiteDone: function (suite) {
+    this.removeFromSuiteHierachy(suite)
+  },
+
   ensureSuiteDisplayed: function () {
-    if (this.suiteHierarchy.length == 0) {
-      var suiteName = 'Top level suite';
-      this.suite({fullName: suiteName, description: suiteName});
+    for (var i = this.suiteHierarchyDisplayed.length ; i < this.suiteHierarchy.length; i++) {
+      this.displaySuite(this.suiteHierarchy[i]);
     }
   },
 
-  suite: function (suite) {
+  displaySuite: function (suite) {
     this.newLine();
-    this.computeSuiteHierarchy(suite);
-    this.computeSuiteIndent();
+    this.computeSuiteIndent(suite);
     var log = null;
     this.displayProcessors.forEach(function (displayProcessor) {
       log = displayProcessor.displaySuite(suite, log);
     });
     this.log(log);
-    this.increaseIndent();
+    this.suiteHierarchyDisplayed.push(suite);
   },
 
   suiteResults: function (suite) {
